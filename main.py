''' 
    Main file - Retrieves and prints all published CVEs in the last 
    120 days and maps as many fields to the ECS fields as possible
'''

from datetime import datetime, timedelta

from dotenv import dotenv_values

import nvdcves


def main():
    
    # Load NVD API key from .env file if exists.
    # Will be slower without a key
    config = dotenv_values(".env")
    API_KEY = None
    if "API_KEY" in config:
        API_KEY = config["API_KEY"]
        
    # Amount of cve results per request. Maximum 2000
    RESULTS_PER_PAGE = 2000
        
    # Calculate time from 120 days ago to now
    date_end = datetime.utcnow()
    date_start = date_end - timedelta(days=120)

    parameters = {
        'modStartDate': nvdcves.format_time(date_start),
        'modEndDate': nvdcves.format_time(date_end),
        'resultsPerPage': RESULTS_PER_PAGE,
    }
    if API_KEY:
        parameters["apiKey"] = API_KEY
        
    #print(f'date start: {nvdcves.format_time(date_start)}')
    #print(f'date end: {nvdcves.format_time(date_end)}')

    cves = nvdcves.get_all_cves(parameters)
    #print(f"Number of CVES retrieved: {len(cves)}")
        
    

if __name__ == "__main__":
    main()
